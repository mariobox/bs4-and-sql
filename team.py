from bs4 import BeautifulSoup
import re
import subprocess
import sqlite3

with open('team.txt') as f:
    soup = BeautifulSoup(f, 'html.parser')

players=""

# get the players' strings and move to new line after 5 strings (1 player)
counter = 1
for string in soup.stripped_strings:
    if (counter % 5 == 0):
        players += repr(string)+"\n"
        counter += 1
    else:
        players += repr(string) + ","
        counter += 1

# remove the "'" symbols around the strings
players = players.replace("'", "")

# create a list of individual players (each player comes after a new line) so that we can perform clean up operations
# we're deleting the last record on the list because our implementation generated an empty record at the end
players_list = players.split("\n")
del players_list[-1]

# create a variable to hold the cleaned information that will populate our csv file
csv_players = []

# Generate a clean csv table of players with cleaned up data:
for item in players_list:
    # eliminate the first comma:
    item=re.sub(r"^,","",item)
    
    # eliminate empty space between commas
    item=item.replace(", ,", "")
    
    # eliminate empty spaces generated by bs    
    item=item.replace("\xa0", "")
    
    # replace left parenthesis around age for a comma to separate agefrom the date of birth
    item=re.sub(r"\(", ",",item)
    
    # replace right parenthesis with nothing to separate age from the date of birth
    item=re.sub(r"\)", "",item)
    
    # eliminate spaces after commas
    item=item.replace(", ", ",")

    # eliminate speces before commas
    item=item.replace(" ,", ",")

    # eliminate euro sign to be able to type market value as int later
    item=re.sub(r"â‚¬","", item)

    # replace the "k" at the end of market value for three zeroes
    item=re.sub(r"k$","000",item)
    item=re.sub(r"k,$","000",item)

    # eliminate the dot for market value in millions (will also affect middle initial or name)
    item=re.sub(r"\.","",item)
    
    # replace "m" at the end of Yotun's market value of $1.3m
    item=re.sub(r"m$","0000",item)
    
    # add cleaned player record to csv_players
    csv_players.append(item)


# Append clean player information to a csv file
with open('team.csv', 'a') as f:
    f.write("number,name,position,bday,byear,age,value_eur\n")
    for line in csv_players:
        f.write(f"{line}")
        f.write("\n")
    f.close()


# import team csv file to a temp table
subprocess.call(["sqlite3", "players.db", ".import --csv team.csv temp"])


# empty team csv file (if it exists from a previous use of the database) so that we can load new info
with open('team.csv', 'w') as f:
    f.write("")

# establish sqlite3 connection with the database
con =  sqlite3.connect("players.db")
cur = con.cursor()

# create our team table
cur.execute('''
CREATE TABLE team(
id SERIAL PRIMARY KEY,
number TEXT,
name VARCHAR(50) NOT NULL,
position VARCHAR(20),
bday TEXT,
byear INTEGER,
age INTEGER,
value_eur INTEGER
)
''')

# insert information into our team table
cur.execute("INSERT INTO team (number, name, position, bday, byear, age, value_eur) SELECT * FROM temp")    

# drop temp table because we don't need it any more
cur.execute("DROP TABLE temp")
con.commit()

# THIS SHOULD BE ENOUGH TO CREATE YOUR TEAM TABLE. YOU CAN NOW GO TO SQLITE3 AND PERFORM QUERIES